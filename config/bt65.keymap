#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/ext_power.h>
#define DEFAULT  0
#define SECOND   1
#define FUNCTION 2


&lt {
	tapping-term-ms = <200>;
};


/ {
	behaviors {
		bl_encoder: bl_encoder {
			compatible = "zmk,behavior-sensor-rotate";
			label = "BL_ENCODER";
			#sensor-binding-cells = <0>;
			bindings = <&bl BL_INC>, <&bl BL_DEC>;
        };
		rgb_encoder: rgb_encoder {
			compatible = "zmk,behavior-sensor-rotate";
			label = "RGB_ENCODER";
			#sensor-binding-cells = <0>;
			bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };
		td0: tap_dance_0 {
            		compatible = "zmk,behavior-tap-dance";
            		label = "TAP_DANCE_0";
            		#binding-cells = <0>;
            		tapping-term-ms = <333>;
            		bindings = <&kp HOME>, <&kp END>;
        };
		td1: tap_dance_1 {
            		compatible = "zmk,behavior-tap-dance";
            		label = "TAP_DANCE_1";
            		#binding-cells = <0>;
            		tapping-term-ms = <333>;
            		bindings = <&mo 1>, <&mo 2>, <&kp LG(LS(S))>;
        };
    };
	keymap {
		compatible = "zmk,keymap";
		default {
			bindings = <
				&kp ESC  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS  &kp EQUAL  &kp BSPC  &kp C_MUTE
				&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LBKT  &kp RBKT  &kp DEL
				&kp CLCK  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &kp SEMI  &kp SQT  &kp NON_US_HASH  &kp RET  &td0
				&kp LSHFT  &kp NON_US_BSLH  &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT  &kp UP  &td2
				&kp LCTRL  &kp LGUI  &kp LALT  &kp SPACE  &kp RALT  &kp RGUI  &kp RCTRL  &kp LEFT  &kp DOWN  &kp RIGHT
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
		second {
			bindings = <
				&kp GRAVE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &none  &none
				&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
				&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
				&trans  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &trans  &none  &none
				&trans  &none  &trans  &none  &trans  &none  &none  &none  &none  &none
			>;
			sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		function {
			bindings = <
				&kp N1  &kp LANG1  &kp LANG2  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &bl BL_TOG
				&none  &none  &kp UP  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
				&none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset  &bootloader  &rgb_ug RGB_TOG
				&kp C_PREV  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &kp C_NEXT  &none  &none
				&bt BT_PRV  &bt BT_NXT  &none  &none  &none  &none  &bt BT_CLR  &none  &none  &none
			>;
			sensor-bindings = <&bl_encoder &rgb_encoder>;
		};
	};
};
